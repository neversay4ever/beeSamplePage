{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/STh.svelte",
    "../src/STr.svelte",
    "../src/SPagination.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { getContext, onMount, tick, createEventDispatcher } from \"svelte\";\n  import { uuid } from \"./table-utils\";\n\n  export let sortKey;\n  export let customSort = null;\n  export let defaultSort = null;\n\n  const dispatch = createEventDispatcher();\n\n  const store = getContext(\"store\");\n\n  let hideSortIcons = store.hideSortIcons;\n  let sortId = store.sortId;\n\n  let id = uuid();\n  let sortOrder = 0;\n  let orderClasses = [\"vt-desc\", \"vt-sortable\", \"vt-asc\"];\n\n  $: sortEnabled = sortKey || typeof customSort === \"function\";\n\n  $: sortClass = $hideSortIcons ? [orderClasses[sortOrder + 1], \"st-sort\"] : [];\n\n  $: if ($sortId !== id && sortOrder !== 0) {\n    sortOrder = 0;\n  }\n\n  onMount(async () => {\n    if (!sortKey && !customSort) {\n      throw new Error(\n        \"Must provide the Sort Key value or a Custom Sort function.\"\n      );\n    }\n\n    if (defaultSort) {\n      sortOrder = defaultSort === \"desc\" ? -1 : 1;\n      store.setSort({\n        sortOrder,\n        sortKey,\n        customSort,\n        sortId: id\n      });\n\n      await tick();\n      dispatch(\"defaultSort\");\n    }\n  });\n\n  function sort() {\n    if (sortEnabled) {\n      sortOrder = sortOrder === 0 || sortOrder === -1 ? sortOrder + 1 : -1;\n      store.setSort({\n        sortOrder,\n        sortKey,\n        customSort,\n        sortId: id\n      });\n    }\n  }\n</script>\n\n<style>\n  .st-sort {\n    cursor: pointer;\n  }\n</style>\n\n<th on:click={sort} class={sortClass.join(' ') + ' ' + $$props.class}>\n  {#if !$hideSortIcons}\n    {#if sortOrder === -1}\n      <slot name=\"ascIcon\">\n        <svg\n          width=\"16\"\n          height=\"16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 320 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9\n            0l119 119c15.2 15.1 4.5 41-16.9 41z\" />\n        </svg>\n      </slot>\n    {:else if sortOrder === 0}\n      <slot name=\"sortIcon\">\n        <svg\n          width=\"16\"\n          height=\"16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 320 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9\n            0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177\n            64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4\n            0 32.1-25.9 17-41z\" />\n        </svg>\n      </slot>\n    {:else if sortOrder === 1}\n      <slot name=\"descIcon\">\n        <svg\n          width=\"16\"\n          height=\"16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 320 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9\n            0L24 329c-15.1-15.1-4.4-41 17-41z\" />\n        </svg>\n      </slot>\n    {/if}\n  {/if}\n  <slot />\n</th>\n",
    "<script>\nimport { getContext } from 'svelte'\n\nexport let row\n\nlet tr\n\nconst store = getContext('store')\nlet customSelection = store.customSelection\nlet selectedRows = store.selectedRows\nlet selectedClass = store.selectedClass\n\n$: isSelected = $selectedRows.find(it => it === row) !== undefined\n\n$: rowClass = (() => {\n    let classes = []\n\n    if (isSelected) {\n        classes.push($selectedClass)\n    }\n\n    if (!$customSelection) {\n        classes.push('st-selectable')\n    }\n\n    return classes.join(' ')\n})()\n\nfunction handleRowSelected (event) {\n    if ($customSelection) {\n        return\n    }\n\n    let source = event.target || event.srcElement\n    if (source.tagName.toLowerCase() === 'td') {\n        if (isSelected) {\n            store.deselectRow(row)\n        } else {\n            store.selectRow(row)\n        }\n    }\n\n}\n</script>\n\n<style>\n    tr.st-selectable {\n        cursor: pointer\n    }\n</style>\n\n<tr\n        bind:this=\"{tr}\"\n        class=\"{rowClass + ' ' + $$props.class}\"\n        on:click=\"{handleRowSelected}\"\n>\n    <slot></slot>\n</tr>",
    "<script>\n  export let currentPage;\n  export let totalPages;\n  export let hideSinglePage = true;\n  export let maxPageLinks = NaN;\n  export let boundaryLinks = false;\n  export let firstText = \"First\";\n  export let lastText = \"Last\";\n  export let directionLinks = true;\n\n  $: displayPages = (() => {\n    function displayAllPages() {\n      const displayPages = [];\n\n      for (\n        let i = currentPage > 5 ? currentPage - 5 : 1;\n        i <= currentPage + 5;\n        i++\n      ) {\n        displayPages.push({\n          title: i.toString(),\n          value: i\n        });\n      }\n      return displayPages;\n    }\n\n    function limitVisiblePages() {\n      const displayPages = [];\n\n      const totalTiers = Math.ceil(totalPages / maxPageLinks);\n\n      const activeTier = Math.ceil(currentPage / maxPageLinks);\n\n      const start = (activeTier - 1) * maxPageLinks + 1;\n      const end = start + maxPageLinks;\n\n      if (activeTier > 1) {\n        displayPages.push({\n          title: \"...\",\n          value: start - 1\n        });\n      }\n\n      for (let i = currentPage - 5; i < currentPage + 5; i++) {\n        if (i > totalPages) {\n          break;\n        }\n\n        displayPages.push({\n          title: i.toString(),\n          value: i\n        });\n      }\n\n      if (activeTier < totalTiers) {\n        displayPages.push({\n          title: \"...\",\n          value: end\n        });\n      }\n\n      return displayPages;\n    }\n\n    if (isNaN(maxPageLinks) || maxPageLinks <= 0) {\n      return displayAllPages();\n    } else {\n      return limitVisiblePages();\n    }\n  })();\n\n  function selectPage(page) {\n    if (page < 1 || page > totalPages || page === currentPage) {\n      return;\n    }\n\n    currentPage = page;\n  }\n\n  function nextPage() {\n    if (currentPage < totalPages) {\n      currentPage++;\n    }\n  }\n\n  function previousPage() {\n    if (currentPage > 1) {\n      currentPage--;\n    }\n  }\n\n  function firstPage() {\n    currentPage = 1;\n  }\n\n  function lastPage() {\n    currentPage = totalPages;\n  }\n</script>\n\n<style>\n  .disabled svg {\n    color: grey;\n  }\n\n  .disabled a {\n    cursor: not-allowed;\n  }\n</style>\n\n<div class=\"text-center align-center bg-gray-100 flex flex-wrap justify-center\">\n  {#if !(hideSinglePage && totalPages === 1)}\n    <nav class=\"smart-pagination\">\n      <ul class=\"pagination\">\n        {#if boundaryLinks}\n          <li class:disabled={currentPage === 1} class=\"page-item\">\n            <a\n              href=\"javascript:void(0)\"\n              aria-label=\"Previous\"\n              on:click={firstPage}\n              class=\"page-link\">\n              <span aria-hidden=\"true\">\n                {@html firstText}\n              </span>\n            </a>\n          </li>\n        {/if}\n\n        {#if directionLinks}\n          <li class:disabled={currentPage === 1} class=\"page-item\">\n            <a\n              href=\"javascript:void(0)\"\n              aria-label=\"Previous\"\n              on:click={previousPage}\n              class=\"page-link\">\n              <slot name=\"previousIcon\" disabled={currentPage === 1}>\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94\n                    0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02\n                    154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37\n                    9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57\n                    0-33.94z\" />\n                </svg>\n              </slot>\n            </a>\n          </li>\n        {/if}\n\n        {#if currentPage !== 1}\n          <li class:disabled={currentPage === 1} class=\"page-item\">\n            <a\n              href=\"javascript:void(0)\"\n              aria-label=\"Previous\"\n              on:click={firstPage}\n              class=\"page-link\">\n              <slot name=\"firstPageIcon\" disabled={currentPage === 1}>\n                First\n              </slot>\n            </a>\n          </li>\n        {/if}\n\n        {#each displayPages as page (page.value)}\n          <li class=\"page-item\" class:active={currentPage === page.value}>\n            <a\n              href=\"javascript:void(0)\"\n              on:click={() => selectPage(page.value)}\n              class=\"page-link\">\n              {page.title}\n            </a>\n          </li>\n        {/each}\n\n        <li class=\"page-item\">\n          <a\n            href=\"javascript:void(0)\"\n            aria-label=\"Previous\"\n            on:click={lastPage}\n            class=\"page-link\">\n            <slot name=\"firstPageIcon\" disabled={currentPage === 1}>Last</slot>\n          </a>\n        </li>\n\n        {#if directionLinks}\n          <li class:disabled={currentPage === totalPages} class=\"page-item\">\n            <a\n              href=\"javascript:void(0)\"\n              aria-label=\"Next\"\n              on:click={nextPage}\n              class=\"page-link\">\n              <slot name=\"nextIcon\" disabled={currentPage === totalPages}>\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569\n                    9.373-33.941\n                    0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505\n                    256 34.484\n                    101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373\n                    24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373\n                    24.568.001 33.941z\" />\n                </svg>\n              </slot>\n            </a>\n          </li>\n        {/if}\n\n        {#if boundaryLinks}\n          <li class:disabled={currentPage === totalPages} class=\"page-item\">\n            <a\n              href=\"javascript:void(0)\"\n              aria-label=\"Previous\"\n              on:click={lastPage}\n              class=\"page-link\">\n              <span aria-hidden=\"true\" v-html=\"lastText\" />\n            </a>\n          </li>\n        {/if}\n      </ul>\n    </nav>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AA8DE,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,OAAO,AACjB,CAAC;AClBC,EAAE,cAAc,eAAC,CAAC,AACd,MAAM,CAAE,OAAO;IACnB,CAAC;ACsDH,wBAAS,CAAC,GAAG,eAAC,CAAC,AACb,KAAK,CAAE,IAAI,AACb,CAAC,AAED,wBAAS,CAAC,CAAC,eAAC,CAAC,AACX,MAAM,CAAE,WAAW,AACrB,CAAC"
}